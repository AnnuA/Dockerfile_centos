
#dockerizing MongoDB: Dockerfile for building MongoDB images
# Based on ubuntu:latest, installs MongoDB following the instructions from:
# http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/

#FROM       ubuntu:16.04
FROM centos:7
#ENV container docker
MAINTAINER Docker

# Installation:
# Import MongoDB public GPG key AND create a MongoDB list file
#RUN apt-get install lsb-release
#RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
#RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
#To create a list file for MongoDB
#RUN echo "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse" |  tee /etc/apt/sources.list.d/mongodb-org-3.2.list



#RUN echo "[mongodb-org-3.4]" >> /etc/yum.repos.d/mongodb-org.repo
#RUN echo "name=MongoDB Repository" >> /etc/yum.repos.d/mongodb-org.repo
#RUN echo "baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/" >> /etc/yum.repos.d/mongodb-org.repo
#RUN echo "gpgcheck=1" >> /etc/yum.repos.d/mongodb-org.repo
#RUN echo "enabled=1" >> /etc/yum.repos.d/mongodb-org.repo
#RUN echo "gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc" >> /etc/yum.repos.d/mongodb-org.repo

ADD mongodb-org.repo /etc/yum.repos.d/
#RUN echo "[mongodb-org-3.4] \n name=MongoDB Repository \n baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/ \n gpgcheck=1 \n enabled=1 \n gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc" >> /etc/yum.repos.d/mongodb-org.repo
#RUN yum-config-manager --disable mongodb-org-3.4 -y

RUN yum install -y mongodb-org
#Update apt-get sources AND install MongoDB
#RUN apt-get update
RUN yum -y update
#RUN mkdir -p /mongodb/
#ADD mongodb  /mongodb/.
ADD mongoserver.sh /
#RUN chmod 777  /mongodb/bin/*
# Create the MongoDB data directory
RUN mkdir -p /data/db

# Avocado Dependencies  installation
#RUN apt-get update
RUN yum -y update
#RUN apt-get install -y curl
#RUN apt-get install -y libcurl3 
#RUN apt-get install -y openssl
#RUN apt-get install -y vim
#RUN apt-get install -y net-tools
#RUN apt-get install -y inetutils-ping
#RUN apt-get update
#RUN apt-get install -y libnss3
#RUN apt-get install -y libnspr4
RUN yum install -y vim-enhanced
RUN yum install libtool perl-core zlib-devel -y
#RUN yum install -y network-tools
RUN yum install -y iputils
RUN yum install -y net-tools

# Avocado installation
#ADD   avocado_2.0.51_amd64.deb /
ADD avocado-2.0.57-1.x86_64.rpm /

ADD install_adpl.sh /
#RUN ./install_adpl.sh -i -o  192.168.100.141 -p /avocado_2.0.51_amd64.deb  -f -m
RUN ./install_adpl.sh -i -o  192.168.100.141 -p /avocado-2.0.57-1.x86_64.rpm  -f -m
#RUN sed "/^.*orchestrator.*$/d" /etc/hosts > /etc/hosts.new; echo "192.168.100.141   orchestrator " >> /etc/hosts.new; cp /etc/hosts.new /etc/hosts
#RUN sed "/^.*orchestrator.*$/d" /etc/hosts > /etc/hosts.new && echo "192.168.100.141   orchestrator" >> /etc/hosts.new && /bin/cp -f  /etc/hosts.new /etc/hosts

RUN sed 's/1000/10/g' /usr/avcd/config/appmgr.conf > /usr/avcd/config/appmgr.mod && mv /usr/avcd/config/appmgr.mod /usr/avcd/config/appmgr.conf

#RUN echo '192.168.100.141   orchestrator' >>  /etc/hosts

#Enabling ADPL
RUN ./usr/avcd/bin/whitelist -p /usr/bin/mongod
#RUN ./usr/avcd/bin/whitelist_filter.sh  -p /usr/bin/mongod
RUN ./usr/avcd/bin/avcd_protect enable
#RUN ./usr/avcd/bin/enable_avocado.sh enable

EXPOSE 27017
ENV HOST_INFO=192.168.100.151:4243

# Set /usr/bin/mongod as the dockerized entry-point application
ENTRYPOINT ["./mongoserver.sh"]
CMD ["/bin/sleep", "10000"]
